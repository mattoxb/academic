
@inproceedings{Beckman1998,
  title = {Controlled Self-Applicable on-Line Partial Evaluation, Using Strategies},
  booktitle = {Proceedings of the 1998 {{International Conference}} on {{Computer Languages}} ({{Cat}}. {{No}}.{{98CB36225}})},
  author = {Beckman, M. and Kamin, S.},
  date = {1998-05},
  pages = {143--152},
  issn = {1074-8970},
  doi = {10.1109/ICCL.1998.674165},
  abstract = {Online partial evaluators are hardly ever self-applicable, because the complexity of deciding whether to residualize terms causes a combinatorial explosion when self-application is attempted. T. Mogensen (1995) has found a way to write a self-applicable online partial evaluator for the /spl lambda/-calculus. His method is to regard every /spl lambda/-term as having both static and dynamic aspects; then, applications can always be done statically (using the static aspect of the operator). However, the absence of decision-making about residualization has a down-side: his partial evaluator knows only how to fully reduce partially evaluated terms. The result is considerable code explosion. We show how this problem can be overcome, in part, by changing the type of the partial evaluator, and giving a new version of the Futamura projections to correspond to that new type. Specifically, we have the partial evaluator take a third argument, called a strategy, which "advises" the partial evaluator whether to residualize. Strategies allow the programmer to control the tradeoff between the size of a specialized term and the cost of subsequently applying it. We present a number of strategies and examples of each.},
  eventtitle = {Proceedings of the 1998 {{International Conference}} on {{Computer Languages}} ({{Cat}}. {{No}}.{{98CB36225}})},
  file = {/home/mattox/Zotero/storage/NWYDRSLL/Beckman and Kamin - 1998 - Controlled self-applicable on-line partial evaluat.pdf;/home/mattox/Zotero/storage/2AHPQ4GW/674165.html},
  keywords = {/spl lambda/-calculus,Automatic testing,Calculus,code explosion,combinatorial explosion,computational complexity,Computer science,controlled self-applicable online partial evaluation,Costs,Decision making,dynamic aspects,Explosions,Futamura projections,lambda calculus,NASA,online operation,partial evaluation (compilers),partial evaluator type changing,partially evaluated terms,Performance evaluation,Programming profession,Size control,static aspects,strategy argument,term residualization,term size-application cost tradeoff}
}


